{
  "id": "liquid-glass-theme",
  "name": "iOSÊ∂≤ÊÄÅÁéªÁíÉ‰∏ªÈ¢ò",
  "version": "2.0.0",
  "description": "iOSÈ£éÊ†ºÁöÑÊ∂≤ÊÄÅÁéªÁíÉÊïàÊûú v2.0 - Êñ∞Â¢ûÂ§úÈó¥Ê®°ÂºèÂàáÊç¢ÂíåÊÄßËÉΩ‰ºòÂåñ",
  "type": "theme",
  "author": "liquid-glass-dev",
  "code": {
    "js": "const GlassController = { darkMode: false, init() { this.createControls(); this.applyDynamicEffects(); this.loadSavedSettings(); }, loadSavedSettings() { this.darkMode = localStorage.getItem('glass-dark-mode') === 'true'; this.updateTheme(); }, createControls() { const controlPanel = document.createElement('div'); controlPanel.id = 'glass-controls'; controlPanel.innerHTML = '<div class=\"glass-control-panel\"><button id=\"glass-toggle\">ÂàáÊç¢ÁéªÁíÉÊïàÊûú</button><div class=\"glass-slider-container\"><label>Ê®°Á≥äÂº∫Â∫¶: </label><input type=\"range\" id=\"blur-slider\" min=\"0\" max=\"20\" value=\"10\"></div><button id=\"dark-mode-toggle\">üåô Â§úÈó¥Ê®°Âºè</button><div class=\"version-info\">v2.0</div></div>'; document.body.appendChild(controlPanel); document.getElementById('glass-toggle').addEventListener('click', this.toggleGlass); document.getElementById('blur-slider').addEventListener('input', this.adjustBlur); document.getElementById('dark-mode-toggle').addEventListener('click', this.toggleDarkMode.bind(this)); this.updateDarkModeButton(); }, toggleGlass() { document.body.classList.toggle('glass-disabled'); }, toggleDarkMode() { this.darkMode = !this.darkMode; localStorage.setItem('glass-dark-mode', this.darkMode); this.updateTheme(); this.updateDarkModeButton(); }, updateDarkModeButton() { const btn = document.getElementById('dark-mode-toggle'); if (btn) { btn.textContent = this.darkMode ? '‚òÄÔ∏è Êó•Èó¥Ê®°Âºè' : 'üåô Â§úÈó¥Ê®°Âºè'; } }, updateTheme() { document.body.classList.toggle('glass-dark-mode', this.darkMode); }, adjustBlur(e) { const blurValue = e.target.value; document.documentElement.style.setProperty('--glass-blur', blurValue + 'px'); }, applyDynamicEffects() { document.addEventListener('mousemove', (e) => { const cards = document.querySelectorAll('.glass-card'); cards.forEach(card => { const rect = card.getBoundingClientRect(); const centerX = rect.left + rect.width / 2; const centerY = rect.top + rect.height / 2; const distance = Math.sqrt(Math.pow(e.clientX - centerX, 2) + Math.pow(e.clientY - centerY, 2)); const maxDistance = 200; if (distance < maxDistance) { const intensity = 1 - (distance / maxDistance); card.style.setProperty('--hover-intensity', intensity); } else { card.style.setProperty('--hover-intensity', 0); } }); }); } }; if (document.readyState === 'loading') { document.addEventListener('DOMContentLoaded', () => GlassController.init()); } else { GlassController.init(); } console.log('Ê∂≤ÊÄÅÁéªÁíÉ‰∏ªÈ¢ò v2.0 Â∑≤ÊøÄÊ¥ª - Êñ∞Â¢ûÂ§úÈó¥Ê®°Âºè!');",
    "css": ":root { --glass-blur: 10px; --glass-opacity: 0.15; --glass-border-opacity: 0.3; --glass-shadow: 0 8px 32px rgba(31, 38, 135, 0.37); --glass-gradient-1: rgba(255, 255, 255, 0.25); --glass-gradient-2: rgba(255, 255, 255, 0.05); --hover-intensity: 0; } body { background: linear-gradient(135deg, #667eea 0%, #764ba2 25%, #f093fb 50%, #f5576c 75%, #4facfe 100%); background-size: 400% 400%; animation: gradientShift 15s ease infinite; min-height: 100vh; transition: all 0.3s ease; } body.glass-dark-mode { background: linear-gradient(135deg, #1e3c72 0%, #2a5298 25%, #6a0572 50%, #ab1a3d 75%, #1a237e 100%); } body::before { content: ''; position: fixed; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; z-index: -1; opacity: 0.3; } body.glass-dark-mode::before { opacity: 0.5; background: rgba(0, 0, 0, 0.2); } @keyframes gradientShift { 0% { background-position: 0% 50%; } 50% { background-position: 100% 50%; } 100% { background-position: 0% 50%; } } #app, .v-main, .container, .v-card, .v-sheet, .v-dialog .v-card, .v-navigation-drawer, .v-app-bar { background: linear-gradient(135deg, var(--glass-gradient-1), var(--glass-gradient-2)) !important; backdrop-filter: blur(var(--glass-blur)) saturate(180%); -webkit-backdrop-filter: blur(var(--glass-blur)) saturate(180%); border: 1px solid rgba(255, 255, 255, var(--glass-border-opacity)); box-shadow: var(--glass-shadow); border-radius: 16px !important; position: relative; overflow: hidden; transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1); } body.glass-dark-mode #app, body.glass-dark-mode .v-main, body.glass-dark-mode .container, body.glass-dark-mode .v-card, body.glass-dark-mode .v-sheet, body.glass-dark-mode .v-dialog .v-card, body.glass-dark-mode .v-navigation-drawer, body.glass-dark-mode .v-app-bar { background: linear-gradient(135deg, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.1)) !important; border-color: rgba(255, 255, 255, 0.1) !important; box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5) !important; } .v-card:hover, .v-sheet:hover { transform: translateY(-2px); box-shadow: 0 12px 40px rgba(31, 38, 135, 0.5); border-color: rgba(255, 255, 255, 0.4); } body.glass-dark-mode .v-card:hover, body.glass-dark-mode .v-sheet:hover { box-shadow: 0 12px 40px rgba(0, 0, 0, 0.7); } .v-text-field .v-field, .v-select .v-field, .v-textarea .v-field, input, textarea, select { background: rgba(255, 255, 255, 0.1) !important; backdrop-filter: blur(8px); -webkit-backdrop-filter: blur(8px); border: 1px solid rgba(255, 255, 255, 0.2) !important; border-radius: 12px !important; } body.glass-dark-mode .v-text-field .v-field, body.glass-dark-mode .v-select .v-field, body.glass-dark-mode .v-textarea .v-field, body.glass-dark-mode input, body.glass-dark-mode textarea, body.glass-dark-mode select { background: rgba(0, 0, 0, 0.3) !important; border-color: rgba(255, 255, 255, 0.1) !important; } .v-text-field .v-field:focus-within, .v-select .v-field:focus-within, .v-textarea .v-field:focus-within, input:focus, textarea:focus, select:focus { background: rgba(255, 255, 255, 0.15) !important; border-color: rgba(255, 255, 255, 0.4) !important; box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.1) !important; } .v-btn { background: linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.1)) !important; backdrop-filter: blur(10px) !important; -webkit-backdrop-filter: blur(10px) !important; border: 1px solid rgba(255, 255, 255, 0.3) !important; box-shadow: 0 4px 16px rgba(31, 38, 135, 0.3) !important; transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important; } body.glass-dark-mode .v-btn { background: linear-gradient(135deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.05)) !important; border-color: rgba(255, 255, 255, 0.2) !important; box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3) !important; } .v-btn:hover { background: linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.15)) !important; transform: translateY(-2px) !important; box-shadow: 0 8px 24px rgba(31, 38, 135, 0.4) !important; } .v-btn:active { transform: translateY(0) !important; } #glass-controls { position: fixed; top: 20px; right: 20px; z-index: 9999; opacity: 0.8; transition: opacity 0.3s ease; } #glass-controls:hover { opacity: 1; } .glass-control-panel { background: linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.05)); backdrop-filter: blur(10px); -webkit-backdrop-filter: blur(10px); border: 1px solid rgba(255, 255, 255, 0.3); border-radius: 12px; padding: 12px; min-width: 200px; } body.glass-dark-mode .glass-control-panel { background: linear-gradient(135deg, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.1)); border-color: rgba(255, 255, 255, 0.2); } .glass-control-panel button { background: linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.1)); border: 1px solid rgba(255, 255, 255, 0.3); border-radius: 8px; padding: 8px 16px; color: #333; cursor: pointer; transition: all 0.3s ease; width: 100%; margin-bottom: 8px; } body.glass-dark-mode .glass-control-panel button { background: linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.05)); color: #fff; border-color: rgba(255, 255, 255, 0.2); } .glass-control-panel button:hover { background: linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.2)); transform: translateY(-1px); } .version-info { font-size: 10px; text-align: center; color: #666; margin-top: 8px; font-weight: bold; } body.glass-dark-mode .version-info { color: #ccc; } .glass-slider-container { display: flex; align-items: center; gap: 8px; font-size: 12px; color: #333; } body.glass-dark-mode .glass-slider-container { color: #fff; } .glass-slider-container input[type=\"range\"] { flex: 1; accent-color: rgba(255, 255, 255, 0.7); } body.glass-disabled * { backdrop-filter: none !important; -webkit-backdrop-filter: none !important; background: rgba(255, 255, 255, 0.9) !important; border: 1px solid rgba(0, 0, 0, 0.1) !important; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1) !important; } body.glass-disabled { background: #f5f5f5 !important; animation: none !important; } body.glass-disabled::before { display: none !important; } .v-card-title, .v-card-subtitle, .v-card-text, .v-list-item-title, .v-list-item-subtitle, h1, h2, h3, h4, h5, h6, p, span, div { text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1); color: #333 !important; } body.glass-dark-mode .v-card-title, body.glass-dark-mode .v-card-subtitle, body.glass-dark-mode .v-card-text, body.glass-dark-mode .v-list-item-title, body.glass-dark-mode .v-list-item-subtitle, body.glass-dark-mode h1, body.glass-dark-mode h2, body.glass-dark-mode h3, body.glass-dark-mode h4, body.glass-dark-mode h5, body.glass-dark-mode h6, body.glass-dark-mode p, body.glass-dark-mode span, body.glass-dark-mode div { color: #fff !important; text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3); } @media (max-width: 768px) { :root { --glass-blur: 6px; } #glass-controls { top: 10px; right: 10px; font-size: 14px; } .glass-control-panel { padding: 8px; min-width: 160px; } } ::-webkit-scrollbar { width: 8px; } ::-webkit-scrollbar-track { background: rgba(255, 255, 255, 0.1); border-radius: 4px; } ::-webkit-scrollbar-thumb { background: linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.1)); border-radius: 4px; border: 1px solid rgba(255, 255, 255, 0.2); } ::-webkit-scrollbar-thumb:hover { background: linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.2)); }",
    "template": ""
  },
  "dependencies": [],
  "permissions": [],
  "config": {
    "defaultBlurIntensity": 10,
    "enableControls": true,
    "enableHoverEffects": true,
    "enableDynamicBackground": true,
    "enableDarkMode": true
  },
  "status": "inactive"
}